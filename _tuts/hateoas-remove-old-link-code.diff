diff --git a/app/config/services.yml b/app/config/services.yml
index 2358222..8c88704 100644
--- a/app/config/services.yml
+++ b/app/config/services.yml
@@ -27,12 +27,6 @@ services:
         class: AppBundle\Pagination\PaginationFactory
         arguments: ['@router']
 
-    link_serialization_subscriber:
-        class: AppBundle\Serializer\LinkSerializationSubscriber
-        arguments: ['@router', '@annotation_reader']
-        tags:
-            - { name: jms_serializer.event_subscriber }
-
     jwt_token_authenticator:
         class: AppBundle\Security\JwtTokenAuthenticator
         autowire: true
diff --git a/src/AppBundle/Annotation/Link.php b/src/AppBundle/Annotation/Link.php
deleted file mode 100644
index 2bcf902..0000000
--- a/src/AppBundle/Annotation/Link.php
+++ /dev/null
@@ -1,26 +0,0 @@
-<?php
-
-namespace AppBundle\Annotation;
-
-/**
- * @Annotation
- * @Target("CLASS")
- */
-class Link
-{
-    /**
-     * @Required
-     *
-     * @var string
-     */
-    public $name;
-
-    /**
-     * @Required
-     *
-     * @var string
-     */
-    public $route;
-
-    public $params = array();
-}
diff --git a/src/AppBundle/Serializer/LinkSerializationSubscriber.php b/src/AppBundle/Serializer/LinkSerializationSubscriber.php
deleted file mode 100644
index 0324280..0000000
--- a/src/AppBundle/Serializer/LinkSerializationSubscriber.php
+++ /dev/null
@@ -1,73 +0,0 @@
-<?php
-
-namespace AppBundle\Serializer;
-
-use AppBundle\Annotation\Link;
-use Doctrine\Common\Annotations\Reader;
-use JMS\Serializer\EventDispatcher\EventSubscriberInterface;
-use JMS\Serializer\EventDispatcher\ObjectEvent;
-use JMS\Serializer\JsonSerializationVisitor;
-use Symfony\Component\ExpressionLanguage\ExpressionLanguage;
-use Symfony\Component\Routing\RouterInterface;
-
-class LinkSerializationSubscriber implements EventSubscriberInterface
-{
-    private $router;
-
-    private $annotationReader;
-
-    private $expressionLanguage;
-
-    public function __construct(RouterInterface $router, Reader $annotationReader)
-    {
-        $this->router = $router;
-        $this->annotationReader = $annotationReader;
-        $this->expressionLanguage = new ExpressionLanguage();
-    }
-
-    public function onPostSerialize(ObjectEvent $event)
-    {
-        /** @var JsonSerializationVisitor $visitor */
-        $visitor = $event->getVisitor();
-
-        $object = $event->getObject();
-        $annotations = $this->annotationReader
-            ->getClassAnnotations(new \ReflectionObject($object));
-
-        $links = array();
-        foreach ($annotations as $annotation) {
-            if ($annotation instanceof Link) {
-                $uri = $this->router->generate(
-                    $annotation->route,
-                    $this->resolveParams($annotation->params, $object)
-                );
-                $links[$annotation->name] = $uri;
-            }
-        }
-
-        if ($links) {
-            $visitor->addData('_links', $links);
-        }
-    }
-
-    private function resolveParams(array $params, $object)
-    {
-        foreach ($params as $key => $param) {
-            $params[$key] = $this->expressionLanguage
-                ->evaluate($param, array('object' => $object));
-        }
-
-        return $params;
-    }
-
-    public static function getSubscribedEvents()
-    {
-        return array(
-            array(
-                'event' => 'serializer.post_serialize',
-                'method' => 'onPostSerialize',
-                'format' => 'json',
-            )
-        );
-    }
-}
