diff --git a/src/AppBundle/Controller/Api/ProgrammerController.php b/src/AppBundle/Controller/Api/ProgrammerController.php
index 68e67c6..30a9391 100644
--- a/src/AppBundle/Controller/Api/ProgrammerController.php
+++ b/src/AppBundle/Controller/Api/ProgrammerController.php
@@ -76,9 +76,11 @@ class ProgrammerController extends BaseController
      */
     public function listAction(Request $request)
     {
+        $filter = $request->query->get('filter');
+
         $qb = $this->getDoctrine()
             ->getRepository('AppBundle:Programmer')
-            ->findAllQueryBuilder();
+            ->findAllQueryBuilder($filter);
         $paginatedCollection = $this->get('pagination_factory')
             ->createCollection($qb, $request, 'api_programmers_collection');
 
diff --git a/src/AppBundle/Repository/ProgrammerRepository.php b/src/AppBundle/Repository/ProgrammerRepository.php
index ed7ff64..2692cbe 100644
--- a/src/AppBundle/Repository/ProgrammerRepository.php
+++ b/src/AppBundle/Repository/ProgrammerRepository.php
@@ -26,8 +26,15 @@ class ProgrammerRepository extends EntityRepository
         return $this->findOneBy(array('nickname' => $nickname));
     }
 
-    public function findAllQueryBuilder()
+    public function findAllQueryBuilder($filter = '')
     {
-        return $this->createQueryBuilder('programmer');
+        $qb = $this->createQueryBuilder('programmer');
+
+        if ($filter) {
+            $qb->andWhere('programmer.nickname LIKE :filter OR programmer.tagLine LIKE :filter')
+                ->setParameter('filter', '%'.$filter.'%');
+        }
+
+        return $qb;
     }
 }
diff --git a/src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php b/src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php
index de12b7f..6a89c5a 100644
--- a/src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php
+++ b/src/AppBundle/Tests/Controller/Api/ProgrammerControllerTest.php
@@ -71,6 +71,11 @@ class ProgrammerControllerTest extends ApiTestCase
 
     public function testGETProgrammersCollectionPagination()
     {
+        $this->createProgrammer(array(
+            'nickname' => 'willnotmatch',
+            'avatarNumber' => 5,
+        ));
+
         for ($i = 0; $i < 25; $i++) {
             $this->createProgrammer(array(
                 'nickname' => 'Programmer'.$i,
@@ -79,7 +84,7 @@ class ProgrammerControllerTest extends ApiTestCase
         }
 
         // page 1
-        $response = $this->client->get('/api/programmers');
+        $response = $this->client->get('/api/programmers?filter=programmer');
         $this->assertEquals(200, $response->getStatusCode());
         $this->asserter()->assertResponsePropertyEquals(
             $response,
